# Generated by Django 3.1.3 on 2021-01-08 14:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Date de retrait des ouvrages')),
                ('is_done', models.BooleanField(default=False, verbose_name='Commande retirée ?')),
                ('is_peb', models.BooleanField(default=False, verbose_name='Demande de PEB ?')),
                ('peb_descr', models.CharField(blank=True, default='', max_length=500, verbose_name='Descriptif PEB :')),
                ('note', models.CharField(blank=True, default='', max_length=500, verbose_name='Note')),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='ClosedDays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date de fermetures de la bibliothèque')),
            ],
            options={
                'verbose_name': 'Jour',
                'verbose_name_plural': 'Jours de fermetures',
            },
        ),
        migrations.CreateModel(
            name='DaysOfWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_no', models.IntegerField()),
                ('day', models.CharField(max_length=8)),
            ],
            options={
                'verbose_name': 'Jour',
                'verbose_name_plural': "Jours d'ouvertures",
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id_alma', models.CharField(max_length=254, primary_key=True, serialize=False, verbose_name='Primary id')),
                ('barcode', models.CharField(max_length=20, verbose_name='Code-barres')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, verbose_name='Adresse mail du lecteur')),
            ],
            options={
                'verbose_name': 'Lecteur',
                'verbose_name_plural': 'Lecteurs',
            },
        ),
        migrations.CreateModel(
            name='PickupLocation',
            fields=[
                ('id_alma', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='Identifiant Alma')),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la bibliotheque')),
                ('institution', models.CharField(choices=[('BXSA', 'Bordeaux Sciences Agro'), ('INP', 'INP Bordeaux'), ('IEP', 'Sciences Po Bordeaux'), ('UBM', 'Université Bordeaux Montaigne'), ('UB', 'Université de Bordeaux')], default='UB', max_length=5, verbose_name="Code l'institution ")),
                ('plot_number', models.IntegerField(default=4, verbose_name='Nombre de plages par heure')),
                ('handling_time', models.IntegerField(default=1, verbose_name='Délai en jour pour la préparation de la commande')),
                ('handling_time_external_library', models.IntegerField(default=7, verbose_name="Délai en jours pour la préparation de la commande quand le document vient d'une autre bibliothèque")),
                ('open_hour', models.IntegerField(default=9, verbose_name="Heure d'ouverture du service de retrait")),
                ('close_hour', models.IntegerField(default=17, verbose_name='Heure de fermeture du service de retrait')),
                ('mid_day_break', models.BooleanField(default=False, verbose_name='Fermeture méridienne (bibliothèque fermée entre 12h & 14h)')),
                ('days_for_booking', models.IntegerField(default=10, verbose_name='Nombre de jours à proposer pour la prise de rdv')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='Adresse vers laquelle envoyer la liste des documents réservés')),
                ('from_email', models.EmailField(default='', max_length=254, verbose_name="Adresse à utiliser pour l'envoi du mail au lecteur")),
                ('tel', models.CharField(blank=True, default='00 00 00 00 00', max_length=50, verbose_name='Téléphone')),
                ('url', models.URLField(blank=True, default='', verbose_name="Lien vers les informations d'accès à la bibliothèque")),
                ('message', models.CharField(blank=True, default='', max_length=500, verbose_name='Message')),
                ('lat', models.CharField(blank=True, default='', max_length=50, verbose_name='Latitude')),
                ('longitude', models.CharField(blank=True, default='', max_length=50, verbose_name='Longitude')),
                ('closed_days', models.ManyToManyField(blank=True, to='cart_management.ClosedDays')),
                ('opening_days', models.ManyToManyField(to='cart_management.DaysOfWeek')),
            ],
            options={
                'verbose_name': 'Bibliothèque de retrait',
                'verbose_name_plural': 'Bibliothèques de retrait',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cart_management.pickuplocation', verbose_name='Bibliothèque')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date et heure de création')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Date et heure de modification')),
                ('user_request_id', models.CharField(max_length=16, primary_key=True, serialize=False, verbose_name='Identifiant de la réservation')),
                ('title', models.CharField(max_length=500, verbose_name="Titre de l'exemplaire")),
                ('item_barcode', models.CharField(blank=True, max_length=30, null=True, verbose_name='Code-barres')),
                ('library_name', models.CharField(max_length=200, verbose_name='Nom de la bibliotheque')),
                ('library_id', models.CharField(blank=True, max_length=10, null=True, verbose_name='Identifiant Alma de la bibliotheque')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name="Localisation de l'exemplaire")),
                ('call_number', models.CharField(blank=True, max_length=30, null=True, verbose_name="Cote de l'exemplaire")),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Description du fascicule (système)')),
                ('manual_description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Description du fascicule (usager)')),
                ('status', models.CharField(blank=True, max_length=80, null=True, verbose_name='Statut de la réservation')),
                ('relance_mail', models.IntegerField(default=0, verbose_name="Nombre de relances envoyées au lecteur pour l'inviter à prendre rendez-vous")),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cart_management.appointment')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cart_management.person', verbose_name='Demandeur')),
                ('pickuplocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cart_management.pickuplocation', verbose_name='Bibliothèque de retrait')),
            ],
            options={
                'verbose_name': 'Document réservé',
                'verbose_name_plural': 'Documents réservés',
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='library',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cart_management.pickuplocation', verbose_name='Bibliothèque de retrait'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person', to='cart_management.person', verbose_name='Lecteur'),
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('date', 'library')},
        ),
    ]
